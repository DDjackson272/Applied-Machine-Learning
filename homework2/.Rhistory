sum(temp[,656])
res <- matrix(integer(), nrow=10, ncol=length(g_u))
for (i in 0:9){
mat_set <- g_u[g_u[,"Number"]==i]
for (j in 2:length(g_u)){
res[i,][j] <- sum(mat_set[,j])
}
}
res <- matrix(integer(), nrow=10, ncol=length(g_u))
for (i in 0:9){
mat_set <- g_u[g_u[,"Number"]==i,]
for (j in 2:length(g_u)){
res[i,][j] <- sum(mat_set[,j])
}
}
res <- matrix(0, nrow=10, ncol=length(g_u))
for (i in 0:9){
mat_set <- g_u[g_u[,"Number"]==i,]
for (j in 2:length(g_u)){
res[i,][j] <- sum(mat_set[,j])
}
}
View(res)
View(res)
res <- matrix(0, nrow=10, ncol=length(g_u))
for (i in 0:9){
mat_set <- g_u[g_u[,"Number"]==i,]
for (j in 2:length(g_u)){
res[i,][j] <- round(sum(mat_set[,j])/nrow(mat_set))
}
}
View(res)
res <- matrix(0, nrow=10, ncol=length(g_u))
for (i in 0:9){
mat_set <- g_u[g_u[,"Number"]==i,]
for (j in 2:length(g_u)){
res[i+1,][j] <- round(sum(mat_set[,j])/nrow(mat_set))
}
}
View(res)
res <- matrix(0, nrow=10, ncol=length(g_u)-1)
for (i in 0:9){
mat_set <- g_u[g_u[,"Number"]==i,]
for (j in 2:length(g_u)){
res[i+1,][j-1] <- round(sum(mat_set[,j])/nrow(mat_set))
}
}
im_vec <- vector()
for (i in 1:10){
mat <- matrix(res[i,], nrow=28)
Mat <- Matrix(mat)
}
im_vec <- vector()
for (i in 1:10){
mat <- matrix(res[i,], nrow=28)
Mat <- Matrix(mat)
}
library(Matrix)
im_vec <- vector()
for (i in 1:10){
mat <- matrix(res[i,], nrow=28)
Mat <- Matrix(mat)
}
im_vec <- vector()
for (i in 1:10){
mat <- matrix(res[i,], nrow=28)
Mat <- Matrix(mat)
im_vec[i] <- image(Mat)
}
for (i in 0:9){
mat_set <- g_u[g_u[,"Number"]==i,]
for (j in 2:length(g_u)){
res[i+1,][j-1] <- round(sum(mat_set[,j])/nrow(mat_set))
}
}
im
for (i in 1:10){
mat <- matrix(res[i,], nrow=28)
Mat <- Matrix(mat)
im <- image(Mat)
print(im)
}
source('C:/Users/acdjackson/Desktop/CS498/homework1/cal_class_distribution.R')
source('C:/Users/acdjackson/Desktop/CS498/homework1/cal_class_distribution.R')
source('C:/Users/acdjackson/Desktop/CS498/homework1/cal_class_distribution.R')
View(mat_set)
source('C:/Users/acdjackson/Desktop/CS498/homework1/cal_class_distribution.R')
source('C:/Users/acdjackson/Desktop/CS498/homework1/cal_class_distribution.R')
source('C:/Users/acdjackson/Desktop/CS498/homework1/cal_class_distribution.R')
source('C:/Users/acdjackson/Desktop/CS498/homework1/cal_class_distribution.R')
source('C:/Users/acdjackson/Desktop/CS498/homework1/cal_class_distribution.R')
source('C:/Users/acdjackson/Desktop/CS498/homework1/part1A.R')
source('C:/Users/acdjackson/Desktop/CS498/homework1/part1A.R')
library(randomForest)
# take in data from csv
image_train_data_untouched <- read.table("train_noheader.csv", sep = ',')
colnames(image_train_data_untouched)[1] <- "Number"
colnames(image_train_data_untouched)[2:785] <- sprintf("pixel%d", 1:784)
image_train_data_untouched$Number <- as.factor(image_train_data_untouched$Number)
image_train_data_untouched[image_train_data_untouched <= 127] <- 0
image_train_data_untouched[image_train_data_untouched >= 128] <- 1
image_res_data_untouched <- read.table("test.csv", sep=",")
colnames(image_res_data_untouched) <- sprintf("pixel%d", 1:784)
image_res_data_untouched[image_res_data_untouched <= 127] <- 0
image_res_data_untouched[image_res_data_untouched >= 128] <- 1
# generate random forest
model_rf_untouched <- randomForest(Number~., data=image_train_data_untouched, maxnodes=2**16-1, ntree=30)
untouched_pred <- predict(model_rf_untouched, newdata=image_res_data_untouched)
untouched_pred
write.csv(untouched_pred, file="try.csv")
source('C:/Users/acdjackson/Desktop/CS498/homework1/part2B.R')
source('C:/Users/acdjackson/Desktop/CS498/homework1/cal_class_distribution.R')
source('C:/Users/acdjackson/Desktop/CS498/homework1/cal_class_distribution.R')
source('C:/Users/acdjackson/Desktop/CS498/homework1/cal_class_distribution.R')
source('C:/Users/acdjackson/Desktop/CS498/homework1/cal_class_distribution.R')
source('C:/Users/acdjackson/Desktop/CS498/homework1/cal_class_distribution.R')
source('C:/Users/acdjackson/Desktop/CS498/homework1/cal_class_distribution.R')
source('C:/Users/acdjackson/Desktop/CS498/homework2/hw2.R')
data = read.csv("test.csv")
data
source('C:/Users/acdjackson/Desktop/CS498/homework2/hw2.R')
train_data
level(train_data$V2)
levels(train_data$V2)
levels(train_data$V1)
levels(train_data$V3)
levels(train_data$V4)
levels(train_data$V5)
levels(train_data$V6)
levels(train_data$V7)
levels(train_data$V8)
levels(train_data$V9)
levels(train_data$V10)
levels(train_data$V11)
train_data$V2[1]
train_data$V2[train_data$V2 == " ?"] = NA
train_data$V2[1]
levels(train_data$V2)
train_data[train_data == " ?"] = NA
levels(train_data$V2)
level = levels(train_data$V2)
level
level[1]
level[2]
level = levels(train_data[1])
level
train_data[1]
train_data[2]
levels(train_data[2])
levels(train_data$V12)
levels(train_data$V2)
levels(train_data[["V2"]])
levels(train_data[["V1"]])
levels(train_data[["V1"]]) == NULL
if (levels(train_data[["V1"]])) print("Nothing")
if (length(levels(train_data[["V1"]]))==0) print("Nothing")
train_data[[sprintf("V%d", 2)]]
lev = levels(train_data[[sprintf("V%d", 2)]])
lev
lev[1] == " ?"
temp = train_data[[sprintf("V%d", 2)]]
temp
temp[temp == " ?"] = "No job"
temp
as.factor(temp)
NA
<NA>
temp[temp == "Federal-gov"] = 1
temp
temp[temp == " Federal-gov"] = 1
temp
temp[which(temp==" Federal-gov")] = 1
temp[which(temp==" Federal-gov")] = "1"
temp[which(temp==" Local-gov")] = 2
temp
train_data$V2
train_data$V2 <- as.character(train_data$V12)
train_data$V2 <- as.character(train_data$V22)
train_data$V2 <- as.character(train_data$V2)
train_data = read.table("train.csv", sep=",")
train_data$V2 <- as.character(train_data$V2)
train_data$V2
train_data$V2[which(train_data$V2==" ?")] <- 0
train_data$V2
source('C:/Users/acdjackson/Desktop/CS498/homework2/hw2.R')
train_data
train_data = read.table("train.csv", sep=",")
source('C:/Users/acdjackson/Desktop/CS498/homework2/hw2.R')
train_data
train_data = read.table("train.csv", sep=",")
train_data$V14
source('C:/Users/acdjackson/Desktop/CS498/homework2/hw2.R')
View(train_data)
View(train_data)
head(train_data)
source('C:/Users/acdjackson/Desktop/CS498/homework2/hw2.R')
View(test_data)
View(test_data)
View(train_data)
View(train_data)
View(translate_data)
source('C:/Users/acdjackson/Desktop/CS498/homework2/hw2.R')
View(test_data)
View(test_data)
View(train_data)
source('C:/Users/acdjackson/Desktop/CS498/homework2/hw2.R')
source('C:/Users/acdjackson/Desktop/CS498/homework2/hw2.R')
source('C:/Users/acdjackson/Desktop/CS498/homework2/hw2.R')
train_data$V15
View(translate_data)
View(val_test)
View(val_train)
source('C:/Users/acdjackson/Desktop/CS498/homework2/hw2.R')
pred
source('C:/Users/acdjackson/Desktop/CS498/homework2/hw2.R')
source('C:/Users/acdjackson/Desktop/CS498/homework2/hw2.R')
train_data$V15[train_data$15 == 2] <- -1
train_data$V15[which(train_data$15 == 2)] <- -1
train_data$V15
train_data$V15[1]
is.integer(train_data$V15[1])
is.character(train_data$V15[1])
train_data$V15[1] == 1
train_data$V15[which(train_data$V15 == 2)] <- -1
train_data$V15[1]
train_data$V15[which(train_data$V15 == 2)] <- as.factor(-1)
source('C:/Users/acdjackson/Desktop/CS498/homework2/hw2.R')
train_data$V15 <- as.character(train_data$V15)
train_data$V15
train_data$V15[train_data$V15 == "2"] <- "-1"
train_data
source('C:/Users/acdjackson/Desktop/CS498/homework2/hw2.R')
train_data
train_data[1]
train_data[1] <- train_data[1]/2
train_data[1]
train_data[1:14] <- train_data[1:14]/sd(train_data[1:14])
source('C:/Users/acdjackson/Desktop/CS498/homework2/hw2.R')
source('C:/Users/acdjackson/Desktop/CS498/homework2/hw2.R')
View(val_test)
source('C:/Users/acdjackson/Desktop/CS498/homework2/hw2.R')
var(train_data$V1)
var(train_data$V2)
var(train_data$V3)
var(train_data$V4)
var(train_data$V5)
var(train_data$V6)
var(train_data$V2)
View(train_data)
var(train_data$V4)
var(train_data$V6)
var(train_data$V7)
var(train_data$V8)
var(train_data$V7, rm.na=T)
mean(train_data$V7)
mean(train_data$V7, rm.na=T)
train_data = read.table("train.csv", sep=",")
train_data$V7
train_data = read.table("train.csv", sep=",")
train_data = read.table("train.csv", sep=",")
train_data = read.table("train.csv", sep=",")
test_data = read.table("test.csv", sep=",")
# Function that translate string in input dataframe to digits
translate_data <- function(input_data){
for (i in 1:length(input_data)){
lev <- levels(input_data[[sprintf("V%d", i)]])
if (length(lev) != 0){
for (j in 1:length(lev)){
target <- as.character(lev[j])
input_data[[sprintf("V%d", i)]] <- as.character(input_data[[sprintf("V%d", i)]])
input_data[[sprintf("V%d", i)]][which(input_data[[sprintf("V%d", i)]]==" ?")] <- NA
input_data[[sprintf("V%d", i)]][which(input_data[[sprintf("V%d", i)]]==target)] <- j
}
}
input_data[[sprintf("V%d", i)]] <- as.numeric(input_data[[sprintf("V%d", i)]])
# normalizing input data
if (i != 15){
mean <- mean(input_data[[sprintf("V%d", i)]], na.rm=T)
sd <- sd(input_data[[sprintf("V%d", i)]], na.rm=T)
input_data[[sprintf("V%d", i)]] <- (input_data[[sprintf("V%d", i)]]-mean)/sd
}
}
return (input_data)
}
train_data <- translate_data(train_data)
train_data$V15 <- as.character(train_data$V15)
train_data$V15[train_data$V15=="2"] <- "-1"
train_data$V7
source('C:/Users/acdjackson/Desktop/CS498/homework2/hw2.R')
a <- [1] * 14
a <- [1,1,1,1,1,1,1,1,1,1,1,1,1]
a
a <- c(1,1,1,1,1,1,1,1,1,1,1,1,1,1)
length(a)
r <- train_data[10,]
r
r[1:14]
max(1,0)
a
a * r[1:14]
gradient(max(0, 1-r$V15(a*r[1:14]+1))+0.5*a*a)
library(math)
library(Math)
install.packages(math)
install.packages(Math)
max(0, 1-r$V15(a*r[1:14]+1))+0.5*a*a
max(0, 1-r$V15(a*r[1:14]+1))
max(0, 1-r$V15*(a*r[1:14]+1))
r[15]
r[15] * 1
r$V15
r$V15 * 1
as.integer(r$V15) * 1
max(0, 1-as.integer(r$V15) * (a*r[1:14]+1))+0.5*a*a
max(0, 1-as.integer(r$V15)
max(0, 1-as.integer(r$V15)
max(0, 1-as.integer(r$V15) * sum(a*r[1:14]+1))+0.5*a*a
install.packages("Mathg")
install.packages("Math")
install.packages("math")
install.packages("numDeriv")
library(numDeriv)
grad(max(0, 1-as.integer(r$V15) * sum(a*r[1:14]+1))+0.5*a*a)
install.packages("pracma")
library("pracma")
gradient(max(0, 1-as.integer(r$V15) * sum(a*r[1:14]+1))+0.5*a*a)
source('C:/Users/acdjackson/Desktop/CS498/homework2/hw2.R')
source('C:/Users/acdjackson/Desktop/CS498/homework2/hw2.R')
source('C:/Users/acdjackson/Desktop/CS498/homework2/hw2.R')
ns <- 1
1:ns
ns<-10
1:ns
runif(1, min = 0, max = 1)
runif(1, min = 0, max = 1) * length(val_train)
runif(1, min = 0, max = 1) * length(val_train)
runif(1, min = 0, max = 1) * length(val_train)
runif(1, min = 0, max = 1) * length(val_train)
runif(1, min = 0, max = 1) * length(val_train)
runif(1, min = 0, max = 1) * length(val_train)
runif(1, min = 0, max = 1) * length(val_train)
runif(1, min = 0, max = 1) * nrow(val_train)
runif(1, min = 0, max = 1) * nrow(val_train)
runif(1, min = 0, max = 1) * nrow(val_train)
round(runif(1, min = 0, max = 1) * nrow(val_train))
gradient(max(0, 1-as.integer(r$V15) * sum(a*r[1:14]+1))+0.5*a*a)
gradient(max(0, 1-as.integer(r$V15) * (sum(a*r[1:14])+1))+0.5*sum(a*a)
)
gradient(max(0, 1-as.integer(r$V15) * (sum(a*r[1:14])+1))+0.5*sum(a*a))
a - 0.5 * a
source('C:/Users/acdjackson/Desktop/CS498/homework2/hw2.R')
source('C:/Users/acdjackson/Desktop/CS498/homework2/hw2.R')
source('C:/Users/acdjackson/Desktop/CS498/homework2/hw2.R')
r
as.integer(r$V15)*(sum(a*r[1:14])+b)
r$V15
(sum(a*r[1:14])+b)
a*r[1:14]
(sum(a*r[1:14], na.rm=T)+b)
source('C:/Users/acdjackson/Desktop/CS498/homework2/hw2.R')
a
View(train_part)
View(train_part)
source('C:/Users/acdjackson/Desktop/CS498/homework2/hw2.R')
source('C:/Users/acdjackson/Desktop/CS498/homework2/hw2.R')
source('C:/Users/acdjackson/Desktop/CS498/homework2/hw2.R')
library(caret)
library(e1071)
library(pracma)
setwd("C:\\Users\\acdjackson\\Desktop\\CS498\\homework2")
train_data = read.table("train.csv", sep=",")
test_data = read.table("test.csv", sep=",")
# Function that translate string in input dataframe to digits
translate_data <- function(input_data){
for (i in 1:length(input_data)){
lev <- levels(input_data[[sprintf("V%d", i)]])
if (length(lev) != 0){
for (j in 1:length(lev)){
target <- as.character(lev[j])
input_data[[sprintf("V%d", i)]] <- as.character(input_data[[sprintf("V%d", i)]])
input_data[[sprintf("V%d", i)]][which(input_data[[sprintf("V%d", i)]]==" ?")] <- NA
input_data[[sprintf("V%d", i)]][which(input_data[[sprintf("V%d", i)]]==target)] <- j
}
}
input_data[[sprintf("V%d", i)]] <- as.numeric(input_data[[sprintf("V%d", i)]])
# normalizing input data
if (i != 15){
mean <- mean(input_data[[sprintf("V%d", i)]], na.rm=T)
sd <- sd(input_data[[sprintf("V%d", i)]], na.rm=T)
input_data[[sprintf("V%d", i)]] <- (input_data[[sprintf("V%d", i)]]-mean)/sd
}
}
return (input_data)
}
train_data <- translate_data(train_data)
train_data$V15 <- as.character(train_data$V15)
train_data$V15[train_data$V15=="2"] <- "-1"
train_data$V15 <- as.factor(train_data$V15)
test_data <- translate_data(test_data)
ind <- createDataPartition(train_data$V15, times=1, p=0.9, list=F)
val_train <- train_data[ind,]
val_test <- train_data[-ind,]
a <- c(1,1,1,1,1,1,1,1,1,1,1,1,1,1)
b <- 1
Ns <- 300
step <- 50
lambda <- 1
for (i in 1:Ns){
g_s <- 1/i+1
index <- createDataPartition(val_train$V15, times=1, p=0.9, list=F)
train_part <- val_train[index,]
valid_part <- val_train[-index,]
for (j in 1:step){
r <- train_part[round(runif(1)*nrow(train_part)),]
if (as.integer(r$V15)*(sum(a*r[1:14], na.rm=T)+b) >= 1){
a <- a - g_s*lambda*a
b <- b
} else {
a <- a - g_s*(lambda*a - as.integer(r$V15)*r[1:14])
b <- b + lambda * as.integer(r$V15)
}
}
pred <- c()
for (k in 1:nrow(valid_part)){
if (sum(a*valid_part[k,][1:14], rm.na=T)+b > 0)
pred[k] <- 1
else
pred[k] <- -1
}
table <- table(actual=valid_part$V15, predict=pred)
ratio <- sum(diag(table))/sum(table)
print(table)
print(ratio)
}
g_s <- 1/i+1
index <- createDataPartition(val_train$V15, times=1, p=0.9, list=F)
train_part <- val_train[index,]
valid_part <- val_train[-index,]
for (j in 1:step){
r <- train_part[round(runif(1)*nrow(train_part)),]
if (as.integer(r$V15)*(sum(a*r[1:14], na.rm=T)+b) >= 1){
a <- a - g_s*lambda*a
b <- b
} else {
a <- a - g_s*(lambda*a - as.integer(r$V15)*r[1:14])
b <- b + lambda * as.integer(r$V15)
}
}
pred <- c()
for (k in 1:nrow(valid_part)){
if (sum(a*valid_part[k,][1:14], rm.na=T)+b > 0)
pred[k] <- 1
else
pred[k] <- -1
}
pred <- c()
if (sum(a*valid_part[k,][1:14], rm.na=T)+b > 0)
pred[k] <- 1
pred <- c()
pred[1] < 1
pred[1] <- 1
pred[2] <- -1
pred
for (j in 1:step){
r <- train_part[round(runif(1)*nrow(train_part)),]
if (as.integer(r$V15)*(sum(a*r[1:14], na.rm=T)+b) >= 1){
a <- a - g_s*lambda*a
b <- b
} else {
a <- a - g_s*(lambda*a - as.integer(r$V15)*r[1:14])
b <- b + lambda * as.integer(r$V15)
}
}
pred <- c()
for (k in 1:nrow(valid_part)){
# if (sum(a*valid_part[k,][1:14], rm.na=T)+b > 0)
#   pred[k] <- 1
# else
#   pred[k] <- -1
}
r <- train_part[round(runif(1)*nrow(train_part)),]
if (as.integer(r$V15)*(sum(a*r[1:14], na.rm=T)+b) >= 1){
a <- a - g_s*lambda*a
b <- b
pred <- c()
for (k in 1:nrow(valid_part)){
if (sum(a*valid_part[k,][1:14], rm.na=T)+b > 0)
print(1)
else
print(-1)
}
# table <- table(actual=valid_part$V15, predict=pred)
# ratio <- sum(diag(table))/sum(table)
# print(table)
# print(ratio)
}
source('C:/Users/acdjackson/Desktop/CS498/homework2/hw2.R')
valid_part[1,]
valid_part[1,][1:14]
valid_part[1,][1:14] * a
sum(valid_part[1,][1:14] * a)
sum(valid_part[1,][1:14] * a, rm.na=T)
v = valid_part[1,]
sum(v[1:14] * a, rm.na=T)
a
source('C:/Users/acdjackson/Desktop/CS498/homework2/hw2.R')
source('C:/Users/acdjackson/Desktop/CS498/homework2/hw2.R')
source('C:/Users/acdjackson/Desktop/CS498/homework2/hw2.R')
View(train_data)
source('C:/Users/acdjackson/Desktop/CS498/homework2/hw2.R')
source('C:/Users/acdjackson/Desktop/CS498/homework2/hw2.R')
source('C:/Users/acdjackson/Desktop/CS498/homework2/hw2.R')
